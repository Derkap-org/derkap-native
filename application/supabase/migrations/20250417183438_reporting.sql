create table "public"."reporting" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "derkap_id" bigint,
    "comment_id" bigint,
    "reported_by" uuid,
    "reason" text
);


alter table "public"."reporting" enable row level security;

CREATE UNIQUE INDEX reporting_pkey ON public.reporting USING btree (id);

alter table "public"."reporting" add constraint "reporting_pkey" PRIMARY KEY using index "reporting_pkey";

alter table "public"."reporting" add constraint "reporting_comment_id_fkey" FOREIGN KEY (comment_id) REFERENCES comment(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."reporting" validate constraint "reporting_comment_id_fkey";

alter table "public"."reporting" add constraint "reporting_derkap_id_fkey" FOREIGN KEY (derkap_id) REFERENCES derkap(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."reporting" validate constraint "reporting_derkap_id_fkey";

alter table "public"."reporting" add constraint "reporting_reported_by_fkey" FOREIGN KEY (reported_by) REFERENCES profile(id) not valid;

alter table "public"."reporting" validate constraint "reporting_reported_by_fkey";

create policy "Enable insert for authenticated users only"
on "public"."reporting"
as permissive
for insert
to authenticated
with check (true);



